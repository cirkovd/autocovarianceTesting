// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// calculateAutocovariance
arma::cube calculateAutocovariance(const arma::mat& X, const arma::mat& Y, const int& maxLag);
RcppExport SEXP _autocovarianceTesting_calculateAutocovariance(SEXP XSEXP, SEXP YSEXP, SEXP maxLagSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const int& >::type maxLag(maxLagSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateAutocovariance(X, Y, maxLag));
    return rcpp_result_gen;
END_RCPP
}
// calculateCovariance
Rcpp::List calculateCovariance(const arma::mat& X, const arma::mat& Y, const double& L);
RcppExport SEXP _autocovarianceTesting_calculateCovariance(SEXP XSEXP, SEXP YSEXP, SEXP LSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::mat& >::type X(XSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< const double& >::type L(LSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateCovariance(X, Y, L));
    return rcpp_result_gen;
END_RCPP
}
// calculateTestStat
Rcpp::List calculateTestStat(const arma::colvec& delta, const arma::mat& covar, const int& n, const int& L, const int& k);
RcppExport SEXP _autocovarianceTesting_calculateTestStat(SEXP deltaSEXP, SEXP covarSEXP, SEXP nSEXP, SEXP LSEXP, SEXP kSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const arma::colvec& >::type delta(deltaSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type covar(covarSEXP);
    Rcpp::traits::input_parameter< const int& >::type n(nSEXP);
    Rcpp::traits::input_parameter< const int& >::type L(LSEXP);
    Rcpp::traits::input_parameter< const int& >::type k(kSEXP);
    rcpp_result_gen = Rcpp::wrap(calculateTestStat(delta, covar, n, L, k));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_autocovarianceTesting_calculateAutocovariance", (DL_FUNC) &_autocovarianceTesting_calculateAutocovariance, 3},
    {"_autocovarianceTesting_calculateCovariance", (DL_FUNC) &_autocovarianceTesting_calculateCovariance, 3},
    {"_autocovarianceTesting_calculateTestStat", (DL_FUNC) &_autocovarianceTesting_calculateTestStat, 5},
    {NULL, NULL, 0}
};

RcppExport void R_init_autocovarianceTesting(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
